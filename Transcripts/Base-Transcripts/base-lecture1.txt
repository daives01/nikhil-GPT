 I think we can. I think. I think. We have. I think. Okay. I'm. I'm. I'm. I'm. I'm. I'm. I'm. I'm. I'm. I'm. I'm. Okay. Everybody's get started. All right. Welcome to animal and equine signs for 45. Fulling management. What? You all look like you're in the wrong room. No. To CS. Four 45 introduction machine learning. 2023. My name is in kill Krishna Swami. I'm a. I'm a. I'm a. I'm a. I'm a. So today's syllabus day. So nothing. Nothing too intense. Basically, I'll go through the syllabus and the class expectations. And I will then go through like the first couple of simple, Jupiter notebooks to get us started. What the heck all this was about. I actually forgot the time and location of our class. And so I went looking for them in the registrar and then start. Like anden. Okay. So you want to move that forward. And like,suspenseful, the. The data stream freezer that is useful is in 20â€“50 asleep errors. So you can have a certain level of comfort in Python. So if that doesn't describe you, you should talk. Basically, you will learn the principles of reading in data, visualizing data, examining data using statistical analysis. I'll go through the syllabus and the course schedule in a moment to kind of, you know, familiarize you with the structure of the course. Okay? So I'm going to go ahead and walk through the slides here. But you can, you know, actually we are going to be doing units on regression classification, reinforcement learning, and then assorted other things in machine learning, that we don't fit in either of those. You will be doing a combination of experimentation and writing for your assignments. So again, the assignment structure. We're also going to be using some of the latest features in Python, including Jupyter note books. So I hope everybody knows how to use those. If you don't. Sorry, you can set up a tutorial. I would like to take a moment to let our TA introduce herself. If you want to say a few words. On fire. And my office hours would be every time I'm still going to. One. And that's going to be in one 20. One 20 in the CS building. So I assume most of you are familiar with that. If you're not, if you go into CS building, that's one of those big labs just on the first floor. Okay. Just out of the curiosity, I know this class typically gets a number of students from outside the CS department. So how many can you raise your hand if you are a CS major? Okay. So most of you, how many of you are not CS majors. So, but a decent number of you. How many of your grad students from not CS? So a few of you. So this is tip. It's pretty typical. So I'd be often get a number of people who are interested in applying computational methods to their to their field. What department are you in? I like both of you engineering and some, some of the other people who raised your hands. Where, where are you from? Okay. And so what are you interested in working on? Okay. Yeah. Very, very, very data friendly and then you. What do you work on? Data. Okay. Sounds sounds like you've seen some of the people I've had before in this class. So hopefully you've heard good things. I think it's going to be a fun class and we're teaching and I hope you enjoy learning it. Okay. So about me. This is my third year at CSU. So I'm kind of midway into my, my tenure. Tenured clock. So I got my PhD five years ago at Brandeis University. That's in Boston. My primary research area is actually natural language processing. So in addition to four 45. I also teach CS 542. It's the graduate natural language processing course. I do research in multi modalities. That is a combination of language and vision. I also do a lot of work with intelligent interactive agents. So, you know, chat bots, but also more sophisticated things that actually are very important. I also do have done a lot of research research recently into the geometric properties of machine learning representations. So if I start throwing the term embedding around a whole lot, that's basically what I'm referring to is the representation in the high dimensional space. That is contained within a machine learning model. And we've applied some of this to low resource languages and natural language processing over languages that are not well represented that don't have a lot of data available. That are maybe not as widely spoken as some of the usual suspects like saying, wish or Chinese or Spanish. I direct a lab called the signal lab that situated grounding and natural language. If you, if you click the link here in the slide, it will take you to my lab, my lab web page. When I'm not doing CS, I spend a lot of time doing distance running. I've run nine marathons, most recently in Chicago. I play music. If you find me on Instagram, you might find me banging out the occasional guitar solo. Here's my wife. Here's my daughter. Here are my three cats. My daughter's in daycare. What this means, if any of you have children or familiar with young children is that she's bringing back a fresh cocktail of disease. Every week. So I recently just got over a stomach bug. Thankfully, I recovered in time to teach in person. So just fair warning that, you know, I will try my best not to get sick. Of course, I'm definitely trying best not to get you sick. But there may be times that I'm not available. Worst case scenario, I'll have to cancel class at some point because I'm just like under the weather for whatever reason. Hope that's not the case. We also see the thing plus some on the way. So just to note about that, we are expecting our second kid at the end of May. Yay. We are very excited. Although I'm also thinking about how tired I am going to be. I just want to note that the duty my mom says coming in late May. So this should not impact the schedule of this class. My daughter came a couple of weeks early. She came in June. So we seem to time our kids pretty well with the school schedule. But just in case, you know, if he comes early, like in my land kind of during finals week, but still wouldn't impact this class, but there's a chance. That especially like as things go on, you know, I'm going to have to take my wife to the doctor a whole lot. So my availability may become less as the semester goes on. So I just want to make you aware of that. And occasionally there may be instances where I have to cancel office hours because of, you know, I have to be able to go to an OB appointment or something like that. Just fair warning about that. Okay. So, of course, principles. You're all adults. This is a college course. You are here to learn. I expect you to be able to demonstrate your learning and I expect you to act like adults that is, you know, be respectful. And then you can go up. Make an effort on the assignments. I'm just saying all this. I've never had a problem with any of this before in any of my classes. I don't expect there to be a problem here. I'm just sort of stating it as a derigure. So the organization of the course, they're going to be two primary hub. There's a canvas page that I hope you all have got access to. If you don't, for some reason, please let me know. I'm going to be able to contact me is through canvas because that allows me to keep all the course messages, you know, collected, and I don't miss things in my inbox. If you don't have access to the can for some reason, please let me know immediately so I can fix that. There's also the course page, which I should show you briefly. So, here, if you go to CS.colos data edu slash to CS 445. So take you to this semester is version of it on it. You will see pretty much the same content as the slides. I just recommend that you check this regularly. So I will update this with my office hours and Cyrus. And then if you click on calendar, you will basically see the structure of the course on all of these, you see these accessible pages and working. That one I had problems with this one works. Okay, some reason I'm trying to fix that but it's just a. This is basically just a slide deck. But you click on this, you can get to the notebooks that we will use so you can run them yourself. You can see minor updates in these, those usually, you know, will be posted before class. So, but the, what you see here is pretty much current on the schedule might change. You know, it's spring semester, sometimes we have snow days and stuff like that. So in that event, we may have to move things around a little bit. Last year we got through all of this content. There's a couple of things at the end that are not, you know, once we get through kind of dimensionality reduction. I do some stuff on, you know, non neural methods, and also do a brief introduction transformers. These two can be sacrificed if necessary, although I would like not to do that because I particularly enjoy doing the intro to transformers. But in the event of say a snow day or something, you may have to move things around by a day or two. So just check the check the calendar is you know it's coming up and so that you also know if any assignments are due. More to do it is changed. There's no textbook. There are some free resources that you can download here. So these books, these resources are very good if you want to know more about mathematics, you want to know other applications. The books are not required. So the contents of the class will be entitled to self-contained in the notebooks, but for further further reading, you know, you definitely can consult these. Okay, so course organization. Yes, so on the course page, if you just saw you'll see the calendar, you'll see the notebooks you'll see the assignments. Canvas is going to be for supplementary material and say if there's a reading I want you to do primarily it's going to be for discussions. So this is the place for mostly you discuss amongst yourselves. So what does it mean to help each other with the assignments you may consult about the problem you may not share code. It's basically the rule of thumb here. I will set it so that students can start Canvas discussion board so like if you do something in the assignment that you have a question about. Start discussion about it and anyone who knows the answer to that can can answer that. Just remember that like I can see everything you post there so don't go sharing code or do doing stupid things. Right. This is not private. Okay, great structure. So there are six programming assignments. This is the majority of your grade 80%. They're worth 100 points each. Then you also get a final project. This is worth 15% of your grade. And then the remaining 5% is class participation. Is kind of conditional upon the medality which you're taking this class. I know you have some people who are online. There's some people are also taking it asynchronously. So basically class participation. If I know that you are engaged, you can assume you will get a full participation points in a class like this. What does that mean? Usually if by the end of the semester, if I can put a face to the name, except for those of you who are already. They usually means you're in a good place. Right. So if this in the class of like 80, 90 people, if I learn your name in the end of the semester, you know, no offense. It means you're, you're probably doing a good job of making yourself known if you aren't. Then if I don't know your name, then it's probably suggests that maybe you should be a little more engaged. So, you know, come to office hours, ask questions, speak up in class post on the discussion boards. There are many different ways to get class participation. Okay, programming assignments. Basically, you're going to be given some data and some starter code. Everything will be done in Jupiter notebooks. So make sure you know how to use those. You can assume that we will be running probably Python 3.9. So if you need if you need no version of Python, I would assume 3.9 people not in this class and NLP submitted 310 assignments, which caused a couple of issues. So if you use Python 3.10, I just recommend you let us know that so that we can take that into consideration. If say something is not working. We will be using automated grading. So when you're given the assignment, you'll be given a greater script. This is the script that we run for the coding part of the assignment. And so what you can do is then you can make sure that your code passes all the unit tests before you can submit. Right. And so as long as you run on an environment that is similar enough to ours and isn't only wild dependencies installed I mean like really wild out there we tried this in multiple environments. Doesn't matter whether you run on Linux or Windows or Mac, you know, as long as as long as you pass the autorader it should work. Your code needs to run given what is asked for in the submission. So don't go installing some weird special package. Don't, for example, use the side kit learning implementation of linear regression to write the linear regression assignment that's not the point. If we see that you will be in major trouble. Also don't use any weird arcane packages that we may not have installed in our systems if we have to install that we will get unhappy and we will pass that unhappiness on to you. You will get partial credit for code and then partial credit for the experiments that you do in the explanation so generally you have to fill out some functions to complete an algorithm. You have to run that algorithm on some data and have to discuss your results. Usually the split between code and discussion is roughly 50 50. And so this ensures that people cannot say just skimp on the discussion and then pass the class with the 90% just writing the template code. So you have to demonstrate your learning and you do that by being able to discuss the experiments that you do and the results. So, so it leads me to the question of, are you learning versus are you chasing a grade. So in this class ask yourself what's more important. Are you here to get an A, or you're here to learn something. You know, some people are here to fill a requirement. It's not most of you. And so I assume you were here to learn machine learning. So how are you going to demonstrate that. So, are you writing yourself ragged before a certain score. Are you staying up until three o'clock in the morning, getting no sleep and main line and coffee into your veins to get 100% or are you doing it because you actually want to meet the challenge of the assignment. This should be because you're telling you the answer because you want to meet the challenge of the assignment if you are doing fine. And you have concerns I will let you know if I think you're doing fine in the class if you're worried about your grade, but I just look at my grade book. Yeah, you're getting like a 97 or something. I'll tell you that you're well positioned. So yeah, questions just to ask. To put in perspective, in my first AI course I got a C plus. I feel like things have worked out okay. So I went to DePaul University in Chicago and I took AI programming. Got a C plus. I recently learned that my professor there moved from DePaul to CU Boulder. And it's now the department chair at the Department of Information Sciences. He once appeared in the news. So I sent him an email is like, Hey, remember when I got a C plus in 2008 well now I'm a professor machine learning at CSU. And he's like, yeah, great, great to hear from you to come down and give a talk sometime. So I guess my point here is don't hang up on the grade too much because in your future career be a graduate school or employment. They're not going to care the specific grade you got a machine learning they're going to know that you can apply the techniques. So like if you get an A minus it's not the end of the world you can get a B plus it's not the end of the world. Okay. What I just said. Okay. My grading style has been described as more than fair. If you speak to people who have had me as an instructor. One place that I am stingy I don't give a plus is that is the A plus is meaningless in in college for truly exceptional performance that is greater than 100% which is possible to do. I will give an A plus. My rant is that a plus is a meeting list at the college level they do nothing through GPA because it's still four points. And there should be abolished because if I don't state this up front people start knocking down my door, ask me why they're 97.8 wasn't a plus. Here's why. All right, the one commandment of this class. So I feel like we have to let me have to lay this out now. I'll show it not use chat GPT to help you with your writing in this class. Okay. How am I going to enforce this? Well, it's going to be difficult, but I what I'm going to be doing them to be reading your writing very closely. Okay. Chat GPT, as I've said before, rights like a high school or who's BSing an essay 15 minutes before class. If you write like a high school or who's BSing an essay 15 minutes before class you probably shouldn't be in college. Okay. And I assume that all of you can write better than this I expect you to demonstrate that writing does not have to be perfect does not have to be free of spelling or grammar errors. That's the understandable has to help me, you know, walk through what you did. But don't use the AI agent to help write your code also it wouldn't do very well at this I suspect because it doesn't have the context. It doesn't have the code that you wrote. It doesn't have the experiments that you ran. So it's not going to be able to discuss that. The exception to this. Some of you may be interested in doing a final project on chat GPT. And that's perfectly acceptable. That's actually great. I would really be interested in seeing some project like that. In that case, one thing that you may want to do would be feeding example inputs into chat GPT and analyzing the output. Right. So chat GPT as the object of study is one thing versus trying to use chat GPT to actually do the assignment. If you have any questions about what is or is not acceptable, please feel free to come ask extension policy on assignments. I am willing to entertain extension requests as long as they're justified. Need to make these more than 24 hours before the assignment and deadline. And this is the assignment deadline for you. That is some people are granted accommodations that means their assignments are due. So if you have a different date from the one for the rest of the class. So if you are one of those people, you can factor that that extension in. What you need to provide is your reason for requesting and a reasonable alternate date by which you can get the assignment done. Most people suggest you to the, you know, a day, maybe two, three, four is pushing it. But, you know, on with, with justification, I would consider that what I will then do is I will approve it, or I will deny it or I will present you with a counter offer say like. And then one day once you get in by Sunday instead. Also, if you act together. You've become much less easy to ignore, because if 20 of you say that you're having problems with the assignment, it probably generally means that I didn't allow enough time for the class at large to do the assignment. If one of you that says that my assumptions that you just started late, but if you know, half the class says it, it's probably more problem with the assignment than the person. And the skill just in general, you know, collective action will serve you well in life. Okay, you may be asking what constitutes a reasonable excuse. So generally this lies at the intersection of things that are specific to you and things that you have no control over. Okay. So what that means, you know, plan travel. Right. This is specific to you, but you planned it before. Okay. You didn't allocate enough time to the assignment. Obviously, you know, you could have started earlier. If you really want to go see the concert. I haven't seen the concert in three years. I want to go see a concert. Okay. So, you know, I'm sorry. I know kidding. Hopefully we never face another situation like this, but someone has did ask for an extension because Russia invaded Ukraine. You know, now specific to you, you have no control over it. If Russia invades Ukraine, but you're a first generation Ukrainian American and you have family in Ukraine. Right. That's different. Okay. So you just need to let me know that. And like that is something that would cause, you know, you specific to stink mental anguish that may impact your ability to do the assignment. A global financial crisis. Right. Everybody is suffering. There may be things that have to be done with the class at large in such a situation. Let's say the, we rocket through the debt ceiling and the stock market crashes through the ground and everything is just boiled beyond recognition. There's still a worldwide pandemic. You know, I know some of you wearing masks. I may on occasion wear a mask. If I feel like it's warranted. So, you know, we have collectively decided that this is not a reason to cancel class. So, you know, we're going with it. But, you know, your spouse asks you for a divorce. You didn't see it coming, which also no control over it. Right. You can get an extension for that. Right. You know, you have no, you may know there's something you deal with, but you don't have any control over it. Right. So that is still specific to you. So that's legitimate. You can hit by a bus. Right. Don't go do not actively go hit by a bus to get an extension. But if it happens, you know, please let me know or have your friend let me know. And you provide some documentation. If you get COVID right and you're down, you know, I've been there. I've had COVID. I've been there for like three days and you just really can't focus. Then I understand. So just be communicative about this. Okay. Okay. Office hours currently I have them set for 330 to 430 Tuesdays and Thursdays. So that is after class. I may it on occasion. I have moved them around. Sometimes it just turns out there's another time that works better. I find I don't like that hour or something. So I have to go to office hours and same day as class is actually enabled me to keep one day mostly free for writing, which has worked well. So I will post these on the website. Okay. So for office hours, please notify me that you intend to come. This prevents me from double booking. But also if no one shows up, it saves me an hour to do something else, which is great. Office hours are reserved for things to do with class. So if you come to office hours, please make it about class. I'm sitting there expecting people to come about class. So I generally, I don't allow my students to book during office hours, for example. So you want to see me outside of class or you can't make office hours for some reason. I have this booking tool. So if you go to Christmas, you can book.me basically this will go directly into my calendar and you can book a 20 minute slot. So you can take office hours or you want to talk to me about something else, you know, you want to talk about research or something that's not related to class. You can, you can set this. Also, but if you do book, please do show up because then I make sure to be there and if someone doesn't show up having books, then I have sat there wasting 20 minutes and I just getting at about it. So, and that will, that will color my impression of you right as a flake. So don't do that. If you need to cancel, let me know and I will move my calendar. So, I'm going to talk about policy. Everybody gets one. So there are six programming assignments. And you can drop one of them from your final grade without any justification, you can just say, I will ask everybody if you want to drop an assignment, you can say I want to drop assignment five or something. So I will put this out when I'm doing grades at the end of the semester. You're not required to drop any assignments. Some people do really well and want that reflected in their grade. So, if you're not required to drop or any reason or no reason whatsoever. You can be unhappy with the 99% you got, or you just couldn't get out of bed that day, or that was a rough week or you know you just didn't get the assignment. But you must submit something for that assignment. And I say something, anything in parentheses. Just make sure that boxes. Okay, it's empty. It's a zero. If there's something in there, I can drop it. I can drop class participation or the final project. Okay, note on free rec. So the assumption is that you've taken CS 345. This is now officially a prerequisite. For the past couple of years is kind of in flux we had both of these machine learning courses that were run separately and in parallel. Now CS 345 is officially prerequisite. There are some people who I've granted to override for this course because you have, you know, demonstrated that you know Python. So the reason that I assume that people have taken 345 is basically I assume you know Python. I assume you know Python and I'm pie. We're not going to spend time teaching Python. And so if you don't know Python, that is you didn't take 345 or 152 is the other one that does Python. And at the very least you will find this to be a steep learning curve. If you think you can learn Python effectively within the first week, then go ahead and stick it out and see if you know you can, you can make it through the first assignment if you can, then things will probably be okay. If that's not you that I do suggest you take CS 445 next year instead after having acquired sufficient facility and Python. So attendance and policies. So for in class attendance this means attending in class or if we're all remote for some reason on the zoom. Zoom is for the online students, or if you know you can request that you be allowed to attend by zoom for some extent you any circumstances. So the lectures are for review of or those people who have cleared it with me previously that they have some longstanding conflict like a full time job. But in general this is not intended to be a substitute for attending. Occasional absences are of course you know expected and allowed. I just asked for some notification. I'm going to ask you to go ahead and get exceptions on a case by case basis so I granted to you and only you so if I grant it to your friend or roommate that isn't also apply to you. You have to request it separately. And you'll know because I will say yes that's fine. And I will keep all the email so I have a record. Okay, COVID-19 this is the. I'm not sure that I've taught where I've had this slide. COVID-19 is still with us even in the year 2023 University just sent out some updated guidance about COVID policy. It was just basically like. Please watch the announcements and will tell you if anything changes so they just sort of shrugged and you know they'll let us know if if they're going to do anything. Just watch out for updated guidance and we will follow the updated guidance in the university. You know, just take the necessary steps to protect yourself and others, you know, as you see fit and just be aware that things might change quickly. If you have COVID right don't come to class. If I have COVID class will be all remote. I'm on my feet. And so on. You know, you can take any policy. This really should be pretty straightforward. Don't plagiarize like not even once. Plagiarism is not a legal crime but in academia it is the highest crime you can commit. So the punishment for. For plagiarism is basically automatic failure on the assignment plus an additional deduction. The punishment for having found to plagiarize has to be simply worse than not just doing the assignment. So it's not just a zero you basically get another x points deducted from your grade, which would be determined by myself. And then maximum penalty would be failure in the course or, if you're a grad student possible dismissal from your program so don't do this. And I have not encountered many instances where people have plagiarized and I don't expect that to be the case I'm just throwing this up there as a warning so you know what would happen if you did. Okay, what costs to plagiarism being copied is equivalent to be to copying in this case, assuming that it is, it is intentional. So that is, if you intentionally copy off of someone you're found to do so that's plagiarism. So if someone steals your homework and they, and you don't know about it you're not liable but if you share it, you are. Okay, so hopefully that is clear so when you are consulting with each other, make sure that you're not showing each other code, but you can work through, you know, toy examples and the problem that I encourage you to work together to learn so I think that's that's a useful technique. Just make sure that you know where the line is and you don't don't get anywhere close to that line. So if you're sharing your solution you get the same penalties the person who copied off the view of the basically it. So don't use this as a strategy to win friends and influence people because I'm not going to be influenced just except for giving you a zero on the assignment and starting from your grade. All right, my least favorite slide. So, as your instructor I'm a mandatory reporter. What this means is that if I feel that there are there's a risk of threats of harm to yourself or others reports of discrimination or sexual harassment. I am required to report them. What this means is, you know, don't put fuck this I want to die in your code comments, basically. You know, this is almost definitely a joke. Right, it's assignment for its marks the weather is miserable, and the assignments not working. And like I feel you here. Just because that's the case. I saw it to file a whole report if you do this because in that you know 1% chance that you actually do want to die. If there's a risk that you are going to harm yourself. If I don't report it and then you come to harm, then I could lose my job and the university could be in big trouble. So I'm just saying, you know, even in just don't express your frustration this way there are other more productive outputs. And also don't threaten people. Right, do not make earnest threats of harm. You know, do not behave inappropriately toward people any of these things I'm required to report again. Not something that I've had a problem with before. But the reason why communication is key. It is always better to ask about something if you are unsure. So if x is allowed, ask me and I will tell you, do you want an extension you know give me reasons why and I will tell you if something is wrong, right, if you feel, you know, small things and feel like the class is going too fast or too slow or I speaking too fast. Sometimes I do that. Just let me know. So basically if you, you know, if you feel you're not being respected or something like that, you know, also let me know. So if you feel something is not right. The first thing you should be doing is talking to me about it, because if you say nothing I'm going to assume that nothing is wrong. Okay. And my, my promise to you is that I will listen to your concerns and take them seriously. Are there any questions about the class policies. Okay. Yeah. What are the. Are you going to go over that like today or second. So let's go to the, I'll nail it down later. Let's just go back to the course schedule so you get a sense of kind of where things stand. So this is, you know, as I said, roughly, roughly final. So you will notice that you get about a week, week and a half, something's up to two weeks for. So you can get closer to two weeks for each assignment. Project proposal is basically going to be rolled out mid March. What you need to do the proposed the project comes in three parts. So basically there's a proposal that you have just a little bit of time to basically. Right, a short, very brief description of what you want to do. And I'll outline, you know, what the parameters are basically you can do a research report or a coding project. And then the proposal to want to do, I might send it back as they have some questions, or I may approve it. Once it's approved and you basically have the remainder of the term to work on that project you may work in groups of. I think up to three or four, I will check. And then in the last two days of class before the final final deliverable is due. We're going to have a lightning presentation so that is every group will come give usually comes out to about a minute and a half to two minute talk about your project. And these are very simple sort of here's my problem. Here's what I've done so far and here's where here's what I've learned. But I'll, if you have questions about the project, let me know, but we're going to nail it the specifics down and you can, I believe, go to this. And basically see what the requirements are I had a time if you want to start thinking about what you want to do. So you're free to start brainstorming with the kind of projects you want to do ahead of time. We will be using pie torch in class, but like you're free use tensor flow and other libraries in your, your project proposal. So the project requirements are like a lot less restrictive than the assignment requirements you get a lot more freedom to kind of maximize your own success. Any other questions. Yes, the project. I guess this is an addendum to research so the, the, the product, the project, if you have like an existing line of research. You can make the project kind of adjacent to that. It just has to be relevant to the class, but because the class is machine learning. There's a lot of ways that you can make whatever research you're doing relevant to machine learning you apply some machine learning technique to your area specialty, for example. So this should not be hard to do. My goal is not to add more work to your place. I know a lot of you are very busy. So if you have some existing research project that you want this to, to form a part of, you know, I'm happy to consider that. Other questions. Okay. All right, so I suspect we will probably be able to end today somewhat early. What I will do is let me connect to the GPU machine. So a GPU is not required for this class, although it does help. Let's have a quick pass. There we go. But we will be running a few of your notebooks on the GPU, and it will help for some assignments to just make it will make it go faster. But if you don't have access to a GPU don't sweat it. So remember that because you're in world in this class, even if you're not a CS student, you should have access to remote access to department CS department machines. And we have a bunch of them that have GPUs on them. So, sorry, maybe you can tell people how to run access them. We also have last year's today also did tutorial about running a Jupyter notebooks remotely on the department machines that I will post. Just so you're aware of all the, the, the full spectrum of resources available to you. All right, so the course review, the beginning of this is basically the slide. Oh, I guess a late policy I didn't mention. So in the extension policy, the flip side of that is the late policy you get a 10 point deduction for every 24 hours that is late. Grace period is roughly, you know, if you turn in really early in the morning. I'm only all going to let that slide I tend to get up very early so if I see your assignment when I get up, I will assume it was submitted the night before so it's like, you don't get in by midnight be getting by 1240. I wouldn't sweat that too much. I'll probably let it slide. After that every 24 hours, it's 10 points. So not like 10% 10% 10% basically you know minus 10 minus 10 minus 10 off the percentage. Okay. This, if you get an extension and then you're late past that extension that's on the late policy starts to apply. Yeah. This sounds confusing. Don't worry. I keep track of everything. It's all done automatically in canvas. And if you have questions, I will be happy to answer them. Basically, just talk to us about that. Don't ask your extension the night before make sure that you do it at least 24 hours. So, I'm going to use the canvas inbox for mail. Allow me to keep it separate and have it not get lost. Okay, so examples of the kinds of problems that we're going to study. We're going to be doing, you know, basically the usual suspects and machine learning that you may have been exposed to before. I will spend a lot of time in the MNIST data set if you know what that is predicting miles per gallon from other factors about cars. Playing tic tac toe using reinforcement learning. And then I'm not sure if this gene expression want to still in the unsupervised learning notebook, but I will check. But this may be a topic of a project for some of you. Okay, first thing that you need to do. I recommend that you install the anaconda distribution. If you don't have a Python or Jupiter distribution installed already. And then the side by lecture notes is a good initial reading to kind of get started to try some examples and make sure that you know how how SciPy works, basic, you know, Python non Python functionality and how it all run the new notebook. Okay, so first thing we're going to do is just go through the execution of our first Jupiter notebook. So first we can see I'm just going to do my standard imports imports this allows me to print the Python version. And so now we'll see we're running on version 3.9.7. Every Python function file begins with a standard set of imports that you're going to be using, you know, and usually the first thing you're going to see is important on pies and P import Matt, live, not pie plot is PLT. So, NumPy is numerical Python. This basically allows us to create vectors and easily manipulate vectors. And then pipe plot is just a standard plotting library. And then import torch is going to import pie torch which is the machine learning library that we're going to be spending most of the time. Yes. No, you can use this. Yeah. So you'll, we'll go through. We'll go through the notebooks and you'll see like some of the standard things that we use. And you'll get starter code that usually that will include all these, these imports. And you can use, you can add other imports as long as they're like standard Python libraries are just like something that every user can expect to have installed in their machine. So, you know, use pie plot, not seaborne, for example, I love seaborne looks great, but don't assume that it is going to have it. Okay. Okay, so first thing we are doing here, but just going to check and see if this machine has a GPU. So you can do torch dot cuda is available, and it will print either true or false. So here, this is my Mac doesn't have an individual GPU on it, but the my lab machine does so I'm running this locally on my lab machine. And so when I run a torch dot cuda is available. It prints out true. So what we'll do then is we will be able to compare the execution of some operations using Python on the GPU versus Python just on the CPU. So here what I'll do is I'll just initialize to uniform distributions 5000 by 5000. And so then if I initialize these, and then I'll just perform the module operator over these so these are created using NP dot random by uniform, which means they're going to be created as a NumPy array. So an end by end NumPy array since and it's 5000 this should create to 5000 by 5000 NumPy arrays that are filled with randomly sampled decimal numbers. So if I run this, and takes a little bit. So size of a is 5000 by 5000 so 25 million size of B is also 25 million. And then if I just print C equals a module of B and then print that you'll see this is the operate the output of the module operator performed element wise over these two very large arrays. Okay. So the size of a mod B is going to also be 25 million. So just to point of fact about tensors versus and dimensional arrays. How many of you have heard the term tensor before. Many of you. How many of you have not heard the term tensor before. A few of you, and that's perfectly okay. So the specifics we're not going to get into exactly the differences between tensors and and dimensional arrays in this class but on both tensors and and the arrays are multi dimensional arrays. So it's not exactly the same. Okay. In that tensors are more generalized. A tensor and array of the same dimensionality that is the rank will behave somewhat differently. One way to think about this is to kind of use this analogy, a linear transformation. So basically if I take some data and I stretch it or I rotate it or remove it can be performed using a matrix. So I'm going to put in the next couple of notebooks. And then a tensor is also an operation in this sense. But a multi dimensional ray is a data structure that's suitable for representing this operation. So, the NumPy, you know, NumPy uses and dimensional arrays and all packages use tensors, and there are neat tools to just transfer back and forth between these, if all you needed the numbers. So, for purposes of execution and operation in this class, you don't need to worry about this distinction. All you need to know is that in order to use things in pie torch things need to be of the tensor data structure, whereas if you're just writing your neural network in NumPy, just using an dimensional array will do. So, you know, transfer between each other, but you can't use a n dimensional ray in an operation that's expecting a tensor, it's going to throw an error. Fortunately, we'll throw an error that tells you it's not a tensor and it needs to be a tensor. So, what we're going to do here now is that I'm going to take a and B, which were and dimensional rays that I created earlier. So, we use the torch dot from NumPy command to turn them into the tensor versions of those same numbers. So, at and BT will now be the tensor versions of those randomly initialized matrices that we had before. Now I'm going to use this dot to command. So, we're going to pass values into this that are either CUDA or CPU, CUDA is the GPU acceleration library by Nvidia. And this is what allows ML computations on GPUs to proceed faster. And so, one trick here is that in order to use these on the CUDA device everything has to be actually be kind of relocated in memory onto that device so by running the two command I now have versions of 18 BT that are actually on the CUDA device. If I run a mod or a mod be over the tensor version, I can get the output. And you may have observed, if you're paying attention that this happened almost instantaneously, and the element wise version over the NumPy arrays took about a second, right, took a little bit. And so you can see that CUDA is allowing us to perform this operation quite a bit faster. How much faster you may ask will find out. So if you import time this allows to keep track of the time. So here's now this is now just numerical representation of the current time in continuous float form. And so now what I'll do is I'll see, I'll start the time and then I'll compute the time to complete the execution for both of these operations. And you can see that NumPy took about 0.45 seconds and pytorch on the GPU took less than one tenth of that. And in fact, if you run it repeatedly, you may find that that difference gets even more true. So if I run this more, you know, 0.44 versus 0.003. So, who knows a whole lot faster. So, just a demonstration of the utility of GPUs. How do we end up here with GPUs? I think we will get to that in the next notebook that I'll do really, really quickly. Let me see if I do not actually go through that at the end. Now let's try to visualize this. So we just saw how how fast the comparison between NumPy and pytorch and GPU is. Let's actually see what kind of speed up we get using different data sizes and where we actually start to get a real value add from CUDA. So same imports. This time then import statistics. Same just, you know, good practice to run this whenever you are using a new machine. So you're doing the same machine just to make sure the GPU hasn't something on offline. So now we'll try a bunch of different trials so you will see if you compare this code to the previous version it's basically the same right I'm creating to and dimensional arrays. And then I'm moving them to tensors and moving into the GPU. The only difference here is that now instead of doing an element wise model operation. I'm actually going to use this at sign which is matrix multiplication. We'll get into specifics and matrix multiplication. How many of you are already familiar with matrix multiplication I hope many of you. Okay, good. So I don't need to go into that in any real depth. So basically, what, what is matrix multiplication. What do we do. Here's some whispering. Yes. We take the rule of one. Are we in multiply with the problem of the other one. That's the most important. That's the problem. Right. Exactly. So if I take. Two 5000 by 5000 arrays multiply them together. What is the shape of the output. Right. And why is that. So if I have say a three by two. Array multiplied by a two by four array was three by four. Right. So basically take, basically taking those those the two inner elements must work together. And the result is in the two elements. If I have a three by two array and try to multiply it by a five by two array what happens. It won't work. We'll get an error. We'll see that. And that you'll see that in practice. And that's like almost the most common error that people will have on their assignments is like the shapes of your arrays are not correct. So what I'll do here is I will try, you know, from sizes of 2000 to 10,000 going to create arrays of these different sizes and then try to perform matrix multiplication over them. And then I will plot the time it takes in NumPy and the time it takes in PyTorch. And then we'll have to be able to visualize the difference. So this will run, you know, it will take a while, because mostly because NumPy is kind of slow. So now we are at n equals. 7000 and equals 8000. And you can already see, you know, Kuda is 10 times faster. Kuda is nine times faster. Kuda is eight times faster. So you can see the comparisons here. But this is not necessarily the most intuitive way to view this. We can get some average statistics on average NumPy took point four, four seconds, an average PyTorch is very slightly faster. But then PyTorch on the GPU is significantly faster. Right. So now we actually plot these. Let's get the results for each type of operation, just convert them to arrays to make sure they're portable. I now have eight samples for each, and then three types of computation that I tried. So now let's plot them. And here's the result. And so you can see the orange line is plain torch, the blue line is NumPy and the green line is PyTorch or is is Kuda. And you can see what a difference that makes. Right. So big advantages to using Kuda. You will know that the value add doesn't really start to appear until the data size increases right there's a relatively negligible difference between the two when we're just using the two samples. But by the time I get 3000 5000 up to 10,000. Wow. Right. So now you hopefully can just understand intuitively why GPU computations are are a benefit. And so now we can just look at the seconds to multiply two matrices. And here is your result. So how do we get to this point with with GPUs. Anybody know kind of the history of, of machine learning and why neural networks has suddenly taken off, well, not suddenly over the last decade have taken off. So when did the first neural network. Come into existence. Yeah. So it's not bad guess any any other thoughts. Sorry, was that. Yeah. 60 60. Okay. Any other any guess. Yeah. So the first neuron I forget the exact date the McCulloch pits neuron. Now I'm forgetting it was 1947 my event, 1957. So, but then the that neuron is basically just a single unit that takes an input forms transformation gets an output. Neural neural networks have been around for quite a while I think actually the first like networks probably the 60s I think I'm for the exact date. But they didn't do much for a very long time. Yeah. So there was a really bad idea for the 70s 80s there are some demonstrations at MIT of kind of doing some like you know, digit recognition type things. You on the coon who you may know of as a godfather of deep learning was actually involved in that back then. And so it was kind of a cool party trick like wow I can get a computer to recognize a digit I don't have to like hard code to shave the digit into it. And it could only do that. Right, it was a one trick pony. And it really wasn't really impressive if you poked at it beyond the simple things that it could do. The real reason was that it's really was due to a lack of data. But now we look at say within the last decade, a couple of interesting things have happened one with the Internet. There's all sorts of data available. It's really easy to access. It's easy to crowdsource. So the amount of data available to create models has grown. The other thing that has happened is that GPU chips have become available. And so for this week, we can actually thank the gaming industry because GPUs were originally developed to accelerate rendering of better graphics on your gaming consoles and things like that. And so these two things have in common. Do you have any didn't really know anything about the relation between graphics and machine learning. Yeah. Vector math exactly so how do I if I have a vector that is pointing to say simple vector one zero zero pointing off to the right. I don't want to transform it into a vector that points, you know, zero zero one to the front. So it's simple. I can do that. You can actually create a matrix that represents that transformation. You can create a matrix that represents an arbitrary transformation between any two vectors. And so this happens in three dimensions. And that's what the use of of GPUs in performing basically chips that are optimized for performing vector math made graphics rendering much more, much more easy and basically creates, you know, creates the visual quality of modern games. But if you can do it in three dimensions, you can do it in 500 dimensions. And so it just takes a little bit of extra compute. And so, no, we're not training chat GPT as fast as we're running a game or not doing a 60 frames a second. But just I can take the same technology that performs a transformation over a three dimensional vector and perform it over a 1768 dimensional vector. It's just going to go slower, but no one's expecting to be able to train chat GPT at 60 frames a second. And that's going to be a very good point. So, GPU is kind of a ride right at this moment where we had enough data to feed into these things. And the acceleration to make training them not take eons. And so now the back propagation operations will go into when we talk about neural networks. Suddenly, these very small updates can be done really, really fast in that scale. And so performing these really small updates over these coefficients that need to be optimized in neural network can now be done in a reasonable time with reasonable resources for a given definition of reason. And boom, we have all of modern machine learning. So that's machine learning history in a nutshell, I guess. And I think, are there any questions about the intro material. Okay, so my last question for today. So, and when I was in high school, we had to buy those TI graphing calculators and like my parents were put out because they had to spend 100 bucks on it. And it's like why why does in school by this for you. And then we saw how much teachers were paid really go that's why. So, but you do you guys have to do that when you were in high school, and you buy the graphing calculators. Do you remember in like algebra class, having to do linear regression with just like the Lynn reg function, where your teacher was like, okay, you set up your data this way. And then you use the Lynn reg function and does the rest for you. So, Lynn reg obviously stands for linear regression. And that's the topic of the lecture that we're going to start on Thursday, and the topic of the first unit. And you will learn how to do the Lynn reg function on your own. So, you don't look forward to that. And I see no need to keep you any longer if there are no questions so I hope. Hopefully we'll be back in person on Thursday we'll see what happens at the snow. But if for some reason we'll remote then we'll meet remotely otherwise I will see you on Thursday. Go ahead. There actually a class and kind of. I think we had some of those like in a bucket somewhere. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.